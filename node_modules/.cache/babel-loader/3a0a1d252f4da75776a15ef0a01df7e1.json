{"ast":null,"code":"import React from'react';import{useHistory,useLocation,useParams}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Useparam=function Useparam(){var _useParams=useParams(),movie=_useParams.movie,id=_useParams.id;var location=useLocation();var history=useHistory();var goback=function goback(){history.push('/');};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"this is Useparams\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"movie name:\",movie]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"and id: \",id]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"b\",{children:\"this is uselLocation\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"my current Path : \",location.pathname]}),location.pathname===\"/Useparam/movie/5\"?/*#__PURE__*/_jsx(\"button\",{onClick:goback,children:\"click me\"}):null]}),/*#__PURE__*/_jsx(\"p\",{children:\"In our React app sometimes we want to access the parameters of the current route in this case useParams hook comes into action. The react-router-dom package has useParams hooks that let you access the parameters of the current route\"}),/*#__PURE__*/_jsx(\"p\",{children:\"What I wanted was for a user to see a list of movie genres (action, adventure, comedy, etc.), click on a genre, and be redirected to a list of movies that fell into that genre\"}),/*#__PURE__*/_jsx(\"p\",{children:\"The useLocation hook returns the location object that represents the current URL\"}),/*#__PURE__*/_jsx(\"p\",{children:\"he useHistory hook gives you access to the history instance that you may use to navigate.\"})]});};export default Useparam;","map":{"version":3,"sources":["/home/smn/Desktop/routing/src/component/Header/Useparam.js"],"names":["React","useHistory","useLocation","useParams","Useparam","movie","id","location","history","goback","push","pathname"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,WAArB,CAAkCC,SAAlC,KAAmD,kBAAnD,C,6IAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACnB,eAAmBD,SAAS,EAA5B,CAAOE,KAAP,YAAOA,KAAP,CAAaC,EAAb,YAAaA,EAAb,CACA,GAAMC,CAAAA,QAAQ,CAAGL,WAAW,EAA5B,CACA,GAAMM,CAAAA,OAAO,CAAGP,UAAU,EAA1B,CAEA,GAAMQ,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACjBD,OAAO,CAACE,IAAR,CAAa,GAAb,EACH,CAFD,CAGD,mBACI,wCACA,oCAAK,wCAAL,cACK,mCAAeL,KAAf,GADL,cAEK,gCAAYC,EAAZ,GAFL,GADA,cAKC,oCACI,2CADJ,cAEI,0CAAsBC,QAAQ,CAACI,QAA/B,GAFJ,CAGKJ,QAAQ,CAACI,QAAT,oCAAyC,eAAQ,OAAO,CAAIF,MAAnB,sBAAzC,CAAuF,IAH5F,GALD,cAUC,+PAVD,cAeA,sMAfA,cAkBA,uGAlBA,cAoBG,gHApBH,GADJ,CA0BF,CAlCD,CAoCA,cAAeL,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\n\n\nconst Useparam = () => {\n    const {movie,id} = useParams();\n    const location = useLocation();\n    const history = useHistory();\n    \n    const goback = () => {\n        history.push('/');\n    }\n   return (\n       <>\n       <div><b>this is Useparams</b>  \n            <p>movie name:{movie}</p> \n            <p>and id: {id}</p>\n        </div>\n        <div>\n            <b>this is uselLocation</b>\n            <p>my current Path : {location.pathname}</p>\n            {location.pathname===`/Useparam/movie/5`?(<button onClick = {goback}>click me</button>):null}\n        </div> \n        <p>In our React app sometimes we want to access the\n        parameters of the current route in this case useParams hook \n        comes into action. The react-router-dom package has useParams \n        hooks that let you access the parameters of the current route\n        </p>\n       <p>What I wanted was for a user to see a list of movie genres (action, adventure, comedy, etc.), \n           click on a genre, and be redirected to a list of movies that \n           fell into that genre</p>\n       <p>The useLocation hook returns the location object that represents\n          the current URL</p>\n          <p>he useHistory hook gives you access to the history \n              instance that you may use to navigate.</p>   \n       </>\n   )\n   \n}\n\nexport default Useparam;"]},"metadata":{},"sourceType":"module"}