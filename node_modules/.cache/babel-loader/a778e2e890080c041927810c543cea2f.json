{"ast":null,"code":"var _jsxFileName = \"/home/smn/Desktop/routing/src/Useparam.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Useparam = () => {\n  _s();\n\n  const {\n    movie,\n    id\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"this is Useparams\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"movie name:\", movie]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"and id: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In our React app sometimes we want to access the parameters of the current route in this case useParams hook comes into action. The react-router-dom package has useParams hooks that let you access the parameters of the current route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"What I wanted was for a user to see a list of movie genres (action, adventure, comedy, etc.), click on a genre, and be redirected to a list of movies that fell into that genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The useLocation hook returns the location object that represents the current URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Useparam, \"1t3cytbwam6KFbL2xHJoovBSSIs=\", false, function () {\n  return [useParams];\n});\n\n_c = Useparam;\nexport default Useparam;\n\nvar _c;\n\n$RefreshReg$(_c, \"Useparam\");","map":{"version":3,"sources":["/home/smn/Desktop/routing/src/Useparam.js"],"names":["React","useParams","Useparam","movie","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAaH,SAAS,EAA5B;AACD,sBACI;AAAA,4BACA;AAAA,mDACK;AAAA,kCAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAA,+BAAYC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA,eAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbA;AAAA,kBADJ;AAkBF,CApBD;;GAAMF,Q;UACiBD,S;;;KADjBC,Q;AAsBN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Useparam = () => {\n    const {movie,id} = useParams();\n   return (\n       <>\n       <div>this is Useparams  \n            <p>movie name:{movie}</p> \n            <p>and id: {id}</p>\n        </div> \n        <p>In our React app sometimes we want to access the\n        parameters of the current route in this case useParams hook \n        comes into action. The react-router-dom package has useParams \n        hooks that let you access the parameters of the current route\n        </p>\n       <p>What I wanted was for a user to see a list of movie genres (action, adventure, comedy, etc.), \n           click on a genre, and be redirected to a list of movies that \n           fell into that genre</p>\n       <p>The useLocation hook returns the location object that represents the current URL</p>    \n       </>\n   )\n   \n}\n\nexport default Useparam;"]},"metadata":{},"sourceType":"module"}