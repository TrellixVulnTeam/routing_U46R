{"ast":null,"code":"var _jsxFileName = \"/home/smn/Desktop/routing/src/Useparam.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Useparam = () => {\n  _s();\n\n  const {\n    movie,\n    id\n  } = useParams();\n  const location = useLocation();\n  const history = useHistory();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"this is Useparams\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"movie name:\", movie]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"and id: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"this is uselLocation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"my current Path : \", location.pathname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), location.pathname === `/Useparam/movie/5` ? /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"click me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 55\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"this is UseHistory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"movie name:\", movie]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"and id: \", id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In our React app sometimes we want to access the parameters of the current route in this case useParams hook comes into action. The react-router-dom package has useParams hooks that let you access the parameters of the current route\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"What I wanted was for a user to see a list of movie genres (action, adventure, comedy, etc.), click on a genre, and be redirected to a list of movies that fell into that genre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The useLocation hook returns the location object that represents the current URL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"he useHistory hook gives you access to the history instance that you may use to navigate.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Useparam, \"QN1mV8zmzGDcFIl7A0nD6hLfyTg=\", false, function () {\n  return [useParams, useLocation, useHistory];\n});\n\n_c = Useparam;\nexport default Useparam;\n\nvar _c;\n\n$RefreshReg$(_c, \"Useparam\");","map":{"version":3,"sources":["/home/smn/Desktop/routing/src/Useparam.js"],"names":["React","useHistory","useLocation","useParams","Useparam","movie","id","location","history","pathname"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,WAArB,EAAkCC,SAAlC,QAAmD,kBAAnD;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP,MAAaH,SAAS,EAA5B;AACA,QAAMI,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,OAAO,GAAGP,UAAU,EAA1B;AAED,sBACI;AAAA,4BACA;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,eACK;AAAA,kCAAeI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAA,+BAAYC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAKC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,yCAAsBC,QAAQ,CAACE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAGKF,QAAQ,CAACE,QAAT,KAAqB,mBAArB,gBAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAzC,GAAoE,IAHzE;AAAA;AAAA;AAAA;AAAA;AAAA,YALD,eAUC;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,eACI;AAAA,kCAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BAAYC,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAVD,eAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdD,eAmBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBA,eAsBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAtBA,eAwBG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBH;AAAA,kBADJ;AA8BF,CAnCD;;GAAMF,Q;UACiBD,S,EACFD,W,EACDD,U;;;KAHdG,Q;AAqCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport { useHistory, useLocation, useParams } from 'react-router-dom';\n\nconst Useparam = () => {\n    const {movie,id} = useParams();\n    const location = useLocation();\n    const history = useHistory();\n\n   return (\n       <>\n       <div><b>this is Useparams</b>  \n            <p>movie name:{movie}</p> \n            <p>and id: {id}</p>\n        </div>\n        <div>\n            <b>this is uselLocation</b>\n            <p>my current Path : {location.pathname}</p>\n            {location.pathname===`/Useparam/movie/5`?(<button>click me</button>):null}\n        </div> \n        <div><b>this is UseHistory</b>  \n            <p>movie name:{movie}</p> \n            <p>and id: {id}</p>\n        </div>\n        <p>In our React app sometimes we want to access the\n        parameters of the current route in this case useParams hook \n        comes into action. The react-router-dom package has useParams \n        hooks that let you access the parameters of the current route\n        </p>\n       <p>What I wanted was for a user to see a list of movie genres (action, adventure, comedy, etc.), \n           click on a genre, and be redirected to a list of movies that \n           fell into that genre</p>\n       <p>The useLocation hook returns the location object that represents\n          the current URL</p>\n          <p>he useHistory hook gives you access to the history \n              instance that you may use to navigate.</p>   \n       </>\n   )\n   \n}\n\nexport default Useparam;"]},"metadata":{},"sourceType":"module"}